1. Intro

2. Me
(personal presentation, much have happened in 1 year, some new faces and some that quit *cough(Eelke)*cough

2.1 690/85

2.2 SMC

3. Frameworks

4. Jquery
	jQuery is a lightweight, "write less, do more", JavaScript library.

	The purpose of jQuery is to make it much easier to use JavaScript on your website.

	jQuery takes a lot of common tasks that require many lines of JavaScript code to accomplish, and wraps them into methods that you can call with a single line of code.

	jQuery also simplifies a lot of the complicated things from JavaScript, like AJAX calls and DOM manipulation.

5. Angular.js
	
S	Singel page applications

S	Two-way data binding - To put it simply, any changes in the user interface are accessible to the controller and,
	vice versa, any alteration of the controller or the model itself will be displayed in the user interface.
	
S	MVC - Thanks to various services and controllers employed in AngularJS, developers can divide an app into integral parts.

W	Two-way data binding appeared to be an imperfect solution. Overusing this feature resulted in the slow work of applications.

W	Given that the logic of a project is in its HTML markup, the development and maintenance are rather problematic.

W	AngularJS works directly with DOM and not with Virtual DOM. Which we see later is a better approach.

W	It's kind of big! Like really big!

W	scale poorly - bigger it gets, the harder it is to maintain. Rewrite etc.

6. React.js

S	Virtual DOM, is a js copy of the actual HTML DOM, and this lets you update the real DOM more precise and easier. Performance increase. Never work with the real DOM, react does that for you. So DOM manipulations are always working well.

W	Wrapper hell, since react passes properties downwards from parent to child we get what is know as the wrapper hell. Nested components

W	Since react dont have all the tools that angular comes with, it leaves it to the developers to decide what tools to use, ajax and so on. Same time a strenght.

7. Angular 2-7

S	TypeScript, a javascript subset, microsoft, strongly typed language, safety, goes out side of the "normal" javascript world (bad for me)

S	Angular CLI is a command line interface for kick-starting new projects, adding files, and performing tasks within the build-deploy-test workflow. It can create classes for you and does a lot of the extra work for you.

S	Material, an easy component library with everyday use components. menu, checkboxes, dropdowns, imagesliders etc etc

S	1-2-way data, keeps the angularjs approach but also introduce the one way like react.

S	RxJS is a library for reactive programming. It generates data flows between components and allows creating new ones needed in a particular situation.

W	TypeScript, kind of a new language, can be tedious. Takes time to learn.

W	Documentation still suffers a bit, and leaves you asking for more sometimes

W	It's kind of big, it contains most of the stuff you want and don't want. No cherry picking.

8. pros, cons

9. misc

10. conclusion (it's all just javascript - Yes Henrik, we know its C in the end...bla...bla...bla)